1
00:00:00,720 --> 00:00:03,360
如果你真的不喜欢钱的话 这个问题对于你来讲好像没有标准答案

2
00:00:03,360 --> 00:00:05,600
我猜你可能根本就不需要报酬吧

3
00:00:05,600 --> 00:00:07,870
最接近正确答案的回答是 看情况而定

4
00:00:07,870 --> 00:00:10,890
这取决于你对 biweekly 的解释

5
00:00:10,890 --> 00:00:13,920
我们来查一下词典

6
00:00:13,920 --> 00:00:17,230
看看这个词该怎么解释

7
00:00:17,230 --> 00:00:21,390
如果你查了词典 就会看见 biweekly 的释义

8
00:00:21,390 --> 00:00:25,725
就在这儿

9
00:00:25,725 --> 00:00:29,710
第一个释义是每两周一次

10
00:00:29,710 --> 00:00:34,150
第二个释义是每周两次

11
00:00:34,150 --> 00:00:36,450
如果你用第一个释义来解释

12
00:00:36,450 --> 00:00:39,380
你更希望每周获得一次报酬 我们假设你想要更多的钱

13
00:00:39,380 --> 00:00:43,130
如果采用第二个释义 你更希望每周获得报酬两次

14
00:00:43,130 --> 00:00:45,370
也许这是纸版词典的问题

15
00:00:45,370 --> 00:00:48,140
因为都是老古董了 不是很准确

16
00:00:48,140 --> 00:00:51,040
我们再来查一查更现代的词典 看看维基词典怎么说吧

17
00:00:51,040 --> 00:00:55,920
好 这里是维基词典中 biweekly 的词条

18
00:00:55,920 --> 00:01:00,780
向下滚动页面 我们可以看到两种释义

19
00:01:00,780 --> 00:01:06,200
每两周一次和每周两次

20
00:01:06,200 --> 00:01:08,450
这主要出现在英国

21
00:01:08,450 --> 00:01:10,400
美国的词典并非如此

22
00:01:10,400 --> 00:01:14,150
似乎在两个国家都有这样的解释

23
00:01:14,150 --> 00:01:16,150
所以这是个大问题

24
00:01:16,150 --> 00:01:19,450
如果我们编写一个程序 一个用来操作工资表的程序

25
00:01:19,450 --> 00:01:22,350
就必须决定按照 biweekly 付工资意味着什么

26
00:01:22,350 --> 00:01:24,300
我们必须确定计算机与程序员的理解是一致的

27
00:01:24,300 --> 00:01:27,680
因此 我们需要发明 Python 这样的编程语言

28
00:01:27,680 --> 00:01:31,380
而不是使用我们已经掌握的自然语言

29
00:01:31,380 --> 00:01:35,000
来为计算机编写程序

30
00:01:35,000 --> 00:01:38,380
这是因为我们无法准确理解像英语和汉语这样的自然语言

31
00:01:38,380 --> 00:01:41,830
对很多内容的解释会因人而异

32
00:01:41,830 --> 00:01:44,850
这种情况会出现在 biweekly 这类单个单词上

33
00:01:44,850 --> 00:01:48,540
也会发生在完整句子中

34
00:01:48,540 --> 00:01:51,410
这些句子包含有歧义的短语

35
00:01:51,410 --> 00:01:54,930
另一个我们不使用自然语言编程的原因是它实在是太繁琐了

36
00:01:54,930 --> 00:01:58,230
为了编写一个程序 我们必须使用非常精确的步骤序列

37
00:01:58,230 --> 00:02:01,220
向计算机准确地描述它应该完成的操作

38
00:02:01,220 --> 00:02:03,760
假如我们非得使用自然语言来描述这些细节

39
00:02:03,760 --> 00:02:06,890
就需要使用海量的文本

40
00:02:06,890 --> 00:02:09,900
接下来我们可以看到 使用 Python 这样的语言编写程序

41
00:02:09,900 --> 00:02:11,430
我们只需要几行代码

42
00:02:11,430 --> 00:02:14,320
就能够以一种非常精确且条理清晰的方式

43
00:02:14,320 --> 00:02:17,200
描述一个复杂的操作

44
00:02:17,200 --> 00:02:19,360
所以我想让你思考一下 当我们在这门课程中编写程序时

45
00:02:19,360 --> 00:02:21,880
如果使用英语会增加多少细节

46
00:02:21,880 --> 00:02:24,650
而所有这些描述 又是如何

47
00:02:24,650 --> 00:02:26,860
仅用几行 Python 代码做到的
